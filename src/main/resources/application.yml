spring:
  profiles:
    group:
      "local": "localDb,common"
      "staging": "stagingDb,common"
      "prod": "remoteDb,common"

---

spring:
  config:
    activate:
      on-profile: "common"

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          socketFactory.class: javax.net.ssl.SSLSocketFactory
          auth: true
          starttls:
            enable: true

    # 정적 리소스에 변화가 있을 때 바로 반영한다.
    devtools:
      livereload:
        enabled: true

    # thymeleaf 참조 경로
    thymeleaf:
      prefix: classpath:/templates/
      suffix: .html
      cache: false
      check-template-location: true


auth.jwt:
  issuer: ${JWT_ISSUER}
  accessSecret: ${JWT_ACCESS_SECRET}
  refreshSecret: ${JWT_REFRESH_SECRET}
  expiration: 60 # minutes
  refreshExpiration: 100 # days

# OAuth Security
oauth2:
  provider:
    google:
      client-id: ${GOOGLE_CLIENT_ID}
      client-secret: ${GOOGLE_CLIENT_SECRET}
      redirect-uri: http://wafflytime.com/oauth/google/callback
      token-uri: https://www.googleapis.com/oauth2/v4/token
      user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
    naver:
      client-id: ${NAVER_CLIENT_ID}
      client-secret: ${NAVER_CLIENT_SECRET}
      redirect-uri: http://wafflytime.com/oauth/naver/callback
      token-uri: https://nid.naver.com/oauth2.0/token
      user-info-uri: https://openapi.naver.com/v1/nid/me
    kakao:
      client-id: ${KAKAO_CLIENT_ID}
      redirect-uri: http://wafflytime.com/oauth/kakao/callback
      token-uri: https://kauth.kakao.com/oauth/token
      user-info-uri: https://kapi.kakao.com/v2/user/me
    github:
      client-id: ${GIT_CLIENT_ID}
      client-secret: ${GIT_CLIENT_SECRET}
      redirect-uri: http://wafflytime.com/oauth/github/callback
      token-uri: https://github.com/login/oauth/access_token
      user-info-uri: https://api.github.com/user

# S3
cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID}
      accessSecret: ${AWS_SECRET_ACCESS_KEY}
    s3:
      bucket: ${BUCKET_NAME}
    region:
      static: ap-northeast-2

---
spring:
  config:
    activate:
      on-profile: "localDb"

  datasource:
    url: jdbc:mysql://127.0.0.1:3306/wafflytime_local_db?serverTimezone=UTC
    username: root
    password: wafflytime_local_pwd
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    properties:
      hibernate:
        show_sql: true
    hibernate:
      ddl-auto: update

  redis:
    host: localhost
    port: 6379

---
spring:
  config:
    activate:
      on-profile: "stagingDb"

  datasource:
    url: jdbc:mysql://host.docker.internal:3306/wafflytime_local_db?serverTimezone=UTC
    username: root
    password: wafflytime_local_pwd
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    properties:
      hibernate:
        show_sql: true
    hibernate:
      ddl-auto: update

  redis:
    host: host.docker.internal
    port: 6379


---
spring:
  config:
    activate:
      on-profile: "remoteDb"

  datasource:
    url: jdbc:mysql://${SQL_HOST}:3306/${SQL_DB}?serverTimezone=UTC
    username: ${SQL_USERNAME}
    password: ${SQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    properties:
      hibernate:
        show_sql: false
    hibernate:
      ddl-auto: update

  redis:
    host: host.docker.internal
    port: 6379